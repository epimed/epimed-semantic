package model.entity;
// Generated 1 nov. 2016 10:44:10 by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ClCellLineAlias generated by hbm2java
 */
@Entity
@Table(name = "cl_cell_line_alias", schema = "epimed_semantic")
public class ClCellLineAlias implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String idCellLineAlias;
	private ClCellLine clCellLine;

	public ClCellLineAlias() {
	}

	public ClCellLineAlias(String idCellLineAlias, ClCellLine clCellLine) {
		this.idCellLineAlias = idCellLineAlias;
		this.clCellLine = clCellLine;
	}

	@Id

	@Column(name = "id_cell_line_alias", unique = true, nullable = false, length = 20)
	public String getIdCellLineAlias() {
		return this.idCellLineAlias;
	}

	public void setIdCellLineAlias(String idCellLineAlias) {
		this.idCellLineAlias = idCellLineAlias;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_cell_line", nullable = false)
	public ClCellLine getClCellLine() {
		return this.clCellLine;
	}

	public void setClCellLine(ClCellLine clCellLine) {
		this.clCellLine = clCellLine;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idCellLineAlias == null) ? 0 : idCellLineAlias.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ClCellLineAlias other = (ClCellLineAlias) obj;
		if (idCellLineAlias == null) {
			if (other.idCellLineAlias != null)
				return false;
		} else if (!idCellLineAlias.equals(other.idCellLineAlias))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ClCellLineAlias [idCellLineAlias=" + idCellLineAlias + ", clCellLine=" + clCellLine + "]";
	}
	
	

}
