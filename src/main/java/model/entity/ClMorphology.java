package model.entity;
// Generated 1 nov. 2016 10:44:10 by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ClMorphology generated by hbm2java
 */
@Entity
@Table(name = "cl_morphology", schema = "epimed_semantic")
public class ClMorphology implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String idMorphology;
	private String name;
	private List<ClCellLine> clCellLines = new ArrayList<ClCellLine>(0);

	public ClMorphology() {
	}

	public ClMorphology(String idMorphology, String name) {
		this.idMorphology = idMorphology;
		this.name = name;
	}

	public ClMorphology(String idMorphology, String name, List<ClCellLine> clCellLines) {
		this.idMorphology = idMorphology;
		this.name = name;
		this.clCellLines = clCellLines;
	}

	@Id

	@Column(name = "id_morphology", unique = true, nullable = false, length = 20)
	public String getIdMorphology() {
		return this.idMorphology;
	}

	public void setIdMorphology(String idMorphology) {
		this.idMorphology = idMorphology;
	}

	@Column(name = "name", nullable = false, length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "clMorphology")
	public List<ClCellLine> getClCellLines() {
		return this.clCellLines;
	}

	public void setClCellLines(List<ClCellLine> clCellLines) {
		this.clCellLines = clCellLines;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idMorphology == null) ? 0 : idMorphology.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ClMorphology other = (ClMorphology) obj;
		if (idMorphology == null) {
			if (other.idMorphology != null)
				return false;
		} else if (!idMorphology.equals(other.idMorphology))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ClMorphology [idMorphology=" + idMorphology + ", name=" + name + "]";
	}
	
	

}
