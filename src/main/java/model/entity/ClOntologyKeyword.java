package model.entity;
// Generated 1 nov. 2016 10:44:10 by Hibernate Tools 4.3.1.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ClOntologyKeyword generated by hbm2java
 */
@Entity
@Table(name = "cl_ontology_keyword", schema = "epimed_semantic")
public class ClOntologyKeyword implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private ClOntologyKeywordId id;
	private ClOntologyCategory clOntologyCategory;
	private Boolean enabled;

	public ClOntologyKeyword() {
	}

	public ClOntologyKeyword(ClOntologyKeywordId id, ClOntologyCategory clOntologyCategory) {
		this.id = id;
		this.clOntologyCategory = clOntologyCategory;
	}

	public ClOntologyKeyword(ClOntologyKeywordId id, ClOntologyCategory clOntologyCategory, Boolean enabled) {
		this.id = id;
		this.clOntologyCategory = clOntologyCategory;
		this.enabled = enabled;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idKeyword", column = @Column(name = "id_keyword", nullable = false)),
			@AttributeOverride(name = "idCategory", column = @Column(name = "id_category", nullable = false, length = 100)) })
	public ClOntologyKeywordId getId() {
		return this.id;
	}

	public void setId(ClOntologyKeywordId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_category", nullable = false, insertable = false, updatable = false)
	public ClOntologyCategory getClOntologyCategory() {
		return this.clOntologyCategory;
	}

	public void setClOntologyCategory(ClOntologyCategory clOntologyCategory) {
		this.clOntologyCategory = clOntologyCategory;
	}

	@Column(name = "enabled")
	public Boolean getEnabled() {
		return this.enabled;
	}

	public void setEnabled(Boolean enabled) {
		this.enabled = enabled;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ClOntologyKeyword other = (ClOntologyKeyword) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "ClOntologyKeyword [id=" + id + ", clOntologyCategory=" + clOntologyCategory + ", enabled=" + enabled
				+ "]";
	}

	
	
}
